import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import Image from "next/image";
import { LogoMark } from "@/components/logo-mark";
import { createClient } from "@/utils/supabase/server";
import { Avatar } from "@/components/ui/avatar";
import { NavLink } from "@/components/nav-links";
import { LogIn } from "lucide-react";
import { ThemeToggle } from "@/components/theme-toggle";
import { MobileNav } from "@/components/mobile-nav";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const supabase = await createClient()
  const { data } = await supabase.auth.getUser()
  const user = data.user

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <header className="w-full border-b border-black/10">
          <nav className="mx-auto max-w-6xl px-4 h-14 flex items-center justify-between relative">
            <div className="flex items-center gap-2">
              <Link href="/" className="mr-2 inline-flex items-center gap-2" aria-label="Limpopo Chess Academy">
                <LogoMark className="h-10 w-auto sm:h-12 md:h-14 lg:h-16" />
              </Link>
              <div className="hidden md:flex items-center gap-2">
                {user ? <NavLink href="/user/profile" color="primary">My Profile</NavLink> : null}
                {user ? <NavLink href="/user/user-dashboard" color="secondary">User Dashboard</NavLink> : null}
                {user ? <NavLink href="/admin/admin-dashboard" color="gray">Admin Dashboard</NavLink> : null}
                {user ? <NavLink href="/admin/upload-tournament" color="gray">Upload Tournament</NavLink> : null}
                <NavLink href="/tournaments" color="gray">Tournaments</NavLink>
                <NavLink href="/forms" color="gray">Forms</NavLink>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <ThemeToggle />
              <MobileNav isAuthenticated={Boolean(user)} />
              {user ? (
                <form action={async () => {
                  'use server'
                  const server = await createClient()
                  await server.auth.signOut()
                }}>
                  <div className="flex items-center gap-3">
                    <Avatar name={user.email ?? 'User'} />
                    <span className="text-sm text-neutral-700 dark:text-neutral-200 hidden sm:inline">{user.email}</span>
                    <button className="text-sm rounded-md border px-3 py-1.5 hover:bg-neutral-50 dark:hover:bg-white/10 focus-visible:ring-2 focus-visible:ring-offset-2" type="submit">Sign out</button>
                  </div>
                </form>
              ) : (
                <>
                  <Link href="/login" className="text-sm rounded-md border px-3 py-1.5 hover:bg-neutral-50 dark:hover:bg-white/10 focus-visible:ring-2 focus-visible:ring-offset-2 inline-flex items-center gap-2">
                    <LogIn className="h-4 w-4" aria-hidden />
                    Login
                  </Link>
                  <Link href="/signup" className="text-sm rounded-md border px-3 py-1.5 hover:bg-neutral-50 dark:hover:bg-white/10 focus-visible:ring-2 focus-visible:ring-offset-2 inline-flex items-center gap-2">
                    Sign Up
                  </Link>
                </>
              )}
            </div>
          </nav>
        </header>
        <main>{children}</main>
      </body>
    </html>
  );
}
